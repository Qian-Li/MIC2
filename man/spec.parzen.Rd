% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MIC_helper.R
\name{spec.parzen}
\alias{spec.parzen}
\title{Estimate Spectral Density using Parzen Lag Window}
\usage{
spec.parzen(x, a = 100, dt = 1/length(x), w0 = 10^(-5), wn = 1/(2 * dt),
  nn = 512)
}
\arguments{
\item{x}{A univariate time series.}

\item{a}{Max lag to truncate the sample ACF estimates, default \code{a=100}. It cannot exceed
the number of observations in \code{x}.}

\item{dt}{1/freq, unit sampling interval of \code{x}.}

\item{w0}{The minimal frequency of interest.}

\item{wn}{The maximal frequency of interest, default as freq/2.}

\item{nn}{Resolution of the spectral estimates (number of points on frequency domain).}
}
\value{
A \code{nn}-by-2 matrix, with the first column being the estimated frequencies,
  and the second column being the esimated spectrum.
}
\description{
\code{spec.parzen} calculate the spectral estimate based on a Fourier transform of a
  truncated and Parzen window smoothed auto-covariance function (ACF).
}
\details{
The raw periodogram \code{spec.pgram} is not a consistent estimator of the spectral density,
  therefore a class of lag window estimators are considered as surrogates in practice achieving
  smootheness and consistency.

Parzen window estimator works the best when the true spectrum is continuous, and specifically
  have peak concentrations at certain frequencies. Such estimators operates on times series
  that are presumably zero-mean and stationary, so that demean and detrending are highly
  recommended on \code{x} before implementation.
}
\examples{
\dontrun{
x <- rnorm(100)
spec <- spec.parzen(x, a = 50, nn = 50)


plot(spec, type = 'l')
}
}
